#!/bin/bash
#
#
# Created by Bryan Roethel, Longwood University (roethelbc@longwood.edu)
# Name: com.lu.dep
#
#
# Process: Install DEPNotify.app and run @ enrollment. If machine exists in Jamf Pro it will automatically continue
# and complete the step. If the machine does not exist in Jamf Pro or is a member of the group labled, 'facstaff' or
# 'departmental' if will prompt the tech for to assign a fixed asset tag and cohort. All updates are installed.
#
#
#########################################################################################
# Get information from the Jamf Pro server. Checks if the device already exists and pulls
# down all the EAs for the device.
#########################################################################################
if [ -e "/Library/Preferences/com.jamfsoftware.jamf.plist" ]; then
    jamfpro=$(defaults read /Library/Preferences/com.jamfsoftware/jamf.plist jss_url)
else
    echo "Jamf Pro server not set. Exiting..."
    exit 1
fi

#########################################################################################
# Use API to retrieve device EAs. Username and password will be hashed out.
#########################################################################################
apiuser="api_user"
apipass="api_pass"

#########################################################################################
# Pull device info.
#########################################################################################
jamfbinary=/usr/local/bin/jamf
macosver=$(sw_vers -productVersion)
serial=$(ioreg -rd1 -c IOPlatformExpertDevice | awk -F'"' '/IOPlatformSerialNumber/{print $4}')

#########################################################################################
# Curl API information for later.
#########################################################################################
eaxml=$(curl "$jamfpro"JSSResource/computers/serialnumber/"$serial"/subset/extension_attributes -u "$apiuser":"$apipass" -H "Accept: text/xml")
assignedname=$(echo "$eaxml" | xpath '//extension_attribute[name="Assigned Computer Name"' | awk -F'<value>|</value>' '{print $2}')
assignedcohort=$(echo "$eaxml" | xpath '//extension_attribute[name="Cohort"' | awk -F'<value>|</value>' '{print $2}')

#########################################################################################
# Last needed information, logged in user, setup done file, DEPNotify log file
#########################################################################################
currentuser=$(/usr/bin/python -c 'from SystemConfiguration import SCDynamicStoreCopyConsoleUser; import sys; username = (SCDynamicStoreCopyConsoleUser(None, None, None) or [None])[0]; username = [username,""][username in [u"loginwindow", None, u""]]; sys.stdout.write(username + "\n");')
setupdone="/var/db/receipts/com.lu.dep.done.bom"
depnotifylog=/var/tmp/depnotify.log

#########################################################################################
# Check for setupdone file. If it exists clean up the LaunchDaemon and this script
#########################################################################################
if [ -f "${setupdone}" ]; then
        /bin/rm -Rf /Library/LaunchDaemons/com.lu.deplaunch.plist
        /bin/rm -- "$0"
        exit 0
fi

#########################################################################################
# Wait for user to login
#########################################################################################
if pgrep -x "Finder" \
&& pgrep -x "Dock" \
&& [ "$currentuser" != "_mbsetupuser" ] \
&& [ ! -f "${setupdone}" ]; then

    # Caffinate device for 5 hours as this will take a while. The device will reboot when we are done.
    /usr/bin/caffeinate -d -i -m -s -t 18000
    caffeinatepid=$!
    
    # Kill any active installers
    killall Installer
    # Wait a bit
    sleep 5
    
#########################################################################################
# If the device is not in Jamf Pro or has a cohort of 'facstaff' or 'departmental'
# We want input from the tech. The device is most likely being reprovisioned.
#########################################################################################
if [[ "$assignedname" == "" ]] || [[ "$assignedcohort" == "" ]] || [[ "$assignedname" == "Facstaff" ]] || [[ "$assignedname" == "Departmental" ]]; then
